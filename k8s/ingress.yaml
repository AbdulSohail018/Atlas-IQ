apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: glonav-ingress
  namespace: glonav
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - glonav.example.com
    - api.glonav.example.com
    secretName: glonav-tls
  rules:
  - host: glonav.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: glonav-frontend
            port:
              number: 3000
  - host: api.glonav.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: glonav-backend
            port:
              number: 8000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: glonav-staging-ingress
  namespace: glonav-staging
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Staging Environment'
spec:
  tls:
  - hosts:
    - glonav-staging.example.com
    - api-staging.glonav.example.com
    secretName: glonav-staging-tls
  rules:
  - host: glonav-staging.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: glonav-frontend
            port:
              number: 3000
  - host: api-staging.glonav.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: glonav-backend
            port:
              number: 8000